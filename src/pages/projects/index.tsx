import Head from 'next/head'
import type { NextPage, InferGetServerSidePropsType } from 'next'
import {
  Button,
  Card,
  Col,
  Grid,
  Loading,
  Row,
  Spacer,
  Text
} from '@nextui-org/react'
import { BsPlus, BsArrowClockwise } from 'react-icons/bs'
import Link from 'next/link'
import { AppStore } from '@/redux/store'
import { useEffect, useState } from 'react'
import { projectService } from '@/modules/project/services'
import { useDispatch, useSelector } from 'react-redux'
import { loadProjects } from '@/redux/slices'
import { CardProject } from '@/modules/project/components'
import { Project } from '@/modules/project/models'
import { useRouter } from 'next/router'

/**
 * @doc
 * SSR: Server side rendering
 * https://nextjs.org/docs/basic-features/data-fetching/get-server-side-props
 * Run server-inside
 * Sometime run client-inside
 */
export const getServerSideProps = async () => {
  const projects: Project[] = await projectService.getAll()

  return {
    props: { projects }
  }
}

type ProjectProps = InferGetServerSidePropsType<typeof getServerSideProps>

const Project: NextPage<ProjectProps> = (props) => {
  console.log('UPDATE PROS', props)
  const projects = useSelector((state: AppStore) => state.project.list)
  const dispatch = useDispatch()
  const router = useRouter()
  const [loading, setLoading] = useState(false)

  const refreshData = () => {
    router.replace(router.asPath)
    setLoading(true)
  }

  useEffect(() => {
    dispatch(loadProjects(props.projects))
    setLoading(false)
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [props])

  return (
    <>
      <Head>
        <title>Projects</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Row justify="space-between">
        <Col span={10}>
          <Text h2 weight="bold">
            Projects 1
          </Text>
        </Col>

        <Col span={2}>
          <Row justify="flex-end">
            {loading ? (
              <Button disabled auto light css={{ mr: '$8' }}>
                <Loading type="points-opacity" color="currentColor" size="sm" />
              </Button>
            ) : (
              <Button
                light
                onPress={refreshData}
                auto
                css={{ mr: '$8' }}
                icon={<BsArrowClockwise size={25} />}
              ></Button>
            )}

            <Link href="/projects/create">
              <Button auto icon={<BsPlus size={40} />}></Button>
            </Link>
          </Row>
        </Col>
      </Row>
      <Spacer y={3} />
      <Grid.Container gap={3} justify="center">
        {projects.map((project) => (
          <Grid key={project.id} xs={4}>
            <CardProject {...project} />
          </Grid>
        ))}
      </Grid.Container>
    </>
  )
}

export default Project
